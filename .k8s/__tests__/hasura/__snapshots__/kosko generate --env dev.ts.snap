// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`hasura with ingress: kosko generate --dev 1`] = `
"---
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    field.cattle.io/creatorId: gitlab
    field.cattle.io/projectId: ''
    git/branch: master
    git/remote: >-
      https://gitlab-ci-token:[MASKED]@gitlab.factory.social.gouv.fr/SocialGouv/myapp.git
    app.gitlab.com/app: socialgouv-myapp
    app.gitlab.com/env: master-dev2
    app.gitlab.com/env.name: master-dev2
  labels:
    azure-pg-admin-user: myapp
    application: master-dev2-myapp
    owner: myapp
    team: myapp
    cert: wildcard
  name: myapp-85-master-dev2
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kapp.k14s.io/disable-default-ownership-label-rules: ''
    kapp.k14s.io/disable-default-label-scoping-rules: ''
    app.gitlab.com/app: socialgouv-myapp
    app.gitlab.com/env: master-dev2
    app.gitlab.com/env.name: master-dev2
  labels:
    app: myapp
    application: master-dev2-myapp
    owner: myapp
    team: myapp
    cert: wildcard
  name: myapp
  namespace: myapp-85-master-dev2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      annotations:
        kapp.k14s.io/disable-default-ownership-label-rules: ''
        kapp.k14s.io/disable-default-label-scoping-rules: ''
        app.gitlab.com/app: socialgouv-myapp
        app.gitlab.com/env: master-dev2
        app.gitlab.com/env.name: master-dev2
      labels:
        app: myapp
        application: master-dev2-myapp
        owner: myapp
        team: myapp
        cert: wildcard
    spec:
      containers:
        - image: >-
            harbor.fabrique.social.gouv.fr/myapp/myapp:0123456789abcdefghijklmnopqrstuvwxyz0123
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 5
          name: myapp
          ports:
            - containerPort: 3000
              name: http
          readinessProbe:
            failureThreshold: 15
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 0
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 50m
              memory: 128Mi
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /healthz
              port: http
            periodSeconds: 5
          env:
            - name: APP_BASE_URL
              value: https://master-dev2-myapp.dev2.fabrique.social.gouv.fr
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: myapp
    application: master-dev2-myapp
    owner: myapp
    team: myapp
    cert: wildcard
  name: myapp
  annotations:
    kapp.k14s.io/disable-default-ownership-label-rules: ''
    kapp.k14s.io/disable-default-label-scoping-rules: ''
    app.gitlab.com/app: socialgouv-myapp
    app.gitlab.com/env: master-dev2
    app.gitlab.com/env.name: master-dev2
  namespace: myapp-85-master-dev2
spec:
  ports:
    - name: http
      port: 80
      targetPort: 3000
  selector:
    app: myapp
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    kapp.k14s.io/disable-default-ownership-label-rules: ''
    kapp.k14s.io/disable-default-label-scoping-rules: ''
    app.gitlab.com/app: socialgouv-myapp
    app.gitlab.com/env: master-dev2
    app.gitlab.com/env.name: master-dev2
  labels:
    app: myapp
    application: master-dev2-myapp
    owner: myapp
    team: myapp
    cert: wildcard
  name: myapp
  namespace: myapp-85-master-dev2
spec:
  rules:
    - host: master-dev2-myapp.dev2.fabrique.social.gouv.fr
      http:
        paths:
          - backend:
              serviceName: myapp
              servicePort: 80
            path: /
  tls:
    - hosts:
        - master-dev2-myapp.dev2.fabrique.social.gouv.fr
      secretName: wildcard-crt
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kapp.k14s.io/disable-default-ownership-label-rules: ''
    kapp.k14s.io/disable-default-label-scoping-rules: ''
    app.gitlab.com/app: socialgouv-myapp
    app.gitlab.com/env: master-dev2
    app.gitlab.com/env.name: master-dev2
  labels:
    app: hasura
    application: master-dev2-myapp
    owner: myapp
    team: myapp
    cert: wildcard
  name: hasura
  namespace: myapp-85-master-dev2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hasura
  template:
    metadata:
      annotations:
        kapp.k14s.io/disable-default-ownership-label-rules: ''
        kapp.k14s.io/disable-default-label-scoping-rules: ''
        app.gitlab.com/app: socialgouv-myapp
        app.gitlab.com/env: master-dev2
        app.gitlab.com/env.name: master-dev2
      labels:
        app: hasura
        application: master-dev2-myapp
        owner: myapp
        team: myapp
        cert: wildcard
    spec:
      containers:
        - image: >-
            harbor.fabrique.social.gouv.fr/myapp-hasura/myapp-hasura:0123456789abcdefghijklmnopqrstuvwxyz0123
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 5
          name: hasura
          ports:
            - containerPort: 80
              name: http
          readinessProbe:
            failureThreshold: 15
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 0
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 64Mi
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /healthz
              port: http
            periodSeconds: 5
          envFrom:
            - secretRef:
                name: azure-pg-user-0123456
      initContainers:
        - env:
            - name: WAIT_FOR_RETRIES
              value: '24'
          envFrom:
            - secretRef:
                name: azure-pg-user-0123456
          image: ghcr.io/socialgouv/docker/wait-for-postgres:6.0.1
          imagePullPolicy: Always
          name: wait-for-postgres
          resources:
            limits:
              cpu: 20m
              memory: 32Mi
            requests:
              cpu: 5m
              memory: 16Mi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: hasura
    application: master-dev2-myapp
    owner: myapp
    team: myapp
    cert: wildcard
  name: hasura
  annotations:
    kapp.k14s.io/disable-default-ownership-label-rules: ''
    kapp.k14s.io/disable-default-label-scoping-rules: ''
    app.gitlab.com/app: socialgouv-myapp
    app.gitlab.com/env: master-dev2
    app.gitlab.com/env.name: master-dev2
  namespace: myapp-85-master-dev2
spec:
  ports:
    - name: http
      port: 80
      targetPort: 80
  selector:
    app: hasura
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    kapp.k14s.io/disable-default-ownership-label-rules: ''
    kapp.k14s.io/disable-default-label-scoping-rules: ''
    app.gitlab.com/app: socialgouv-myapp
    app.gitlab.com/env: master-dev2
    app.gitlab.com/env.name: master-dev2
  labels:
    app: hasura
    application: master-dev2-myapp
    owner: myapp
    team: myapp
    cert: wildcard
  name: hasura
  namespace: myapp-85-master-dev2
spec:
  rules:
    - host: hasura-master-dev2-myapp.dev2.fabrique.social.gouv.fr
      http:
        paths:
          - backend:
              serviceName: hasura
              servicePort: 80
            path: /
  tls:
    - hosts:
        - hasura-master-dev2-myapp.dev2.fabrique.social.gouv.fr
      secretName: wildcard-crt
"
`;

exports[`hasura: kosko generate --dev 1`] = `
"---
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    field.cattle.io/creatorId: gitlab
    field.cattle.io/projectId: ''
    git/branch: master
    git/remote: >-
      https://gitlab-ci-token:[MASKED]@gitlab.factory.social.gouv.fr/SocialGouv/myapp.git
    app.gitlab.com/app: socialgouv-myapp
    app.gitlab.com/env: master-dev2
    app.gitlab.com/env.name: master-dev2
  labels:
    azure-pg-admin-user: myapp
    application: master-dev2-myapp
    owner: myapp
    team: myapp
    cert: wildcard
  name: myapp-85-master-dev2
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kapp.k14s.io/disable-default-ownership-label-rules: ''
    kapp.k14s.io/disable-default-label-scoping-rules: ''
    app.gitlab.com/app: socialgouv-myapp
    app.gitlab.com/env: master-dev2
    app.gitlab.com/env.name: master-dev2
  labels:
    app: myapp
    application: master-dev2-myapp
    owner: myapp
    team: myapp
    cert: wildcard
  name: myapp
  namespace: myapp-85-master-dev2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      annotations:
        kapp.k14s.io/disable-default-ownership-label-rules: ''
        kapp.k14s.io/disable-default-label-scoping-rules: ''
        app.gitlab.com/app: socialgouv-myapp
        app.gitlab.com/env: master-dev2
        app.gitlab.com/env.name: master-dev2
      labels:
        app: myapp
        application: master-dev2-myapp
        owner: myapp
        team: myapp
        cert: wildcard
    spec:
      containers:
        - image: >-
            harbor.fabrique.social.gouv.fr/myapp/myapp:0123456789abcdefghijklmnopqrstuvwxyz0123
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 5
          name: myapp
          ports:
            - containerPort: 3000
              name: http
          readinessProbe:
            failureThreshold: 15
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 0
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 50m
              memory: 128Mi
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /healthz
              port: http
            periodSeconds: 5
          env:
            - name: APP_BASE_URL
              value: https://master-dev2-myapp.dev2.fabrique.social.gouv.fr
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: myapp
    application: master-dev2-myapp
    owner: myapp
    team: myapp
    cert: wildcard
  name: myapp
  annotations:
    kapp.k14s.io/disable-default-ownership-label-rules: ''
    kapp.k14s.io/disable-default-label-scoping-rules: ''
    app.gitlab.com/app: socialgouv-myapp
    app.gitlab.com/env: master-dev2
    app.gitlab.com/env.name: master-dev2
  namespace: myapp-85-master-dev2
spec:
  ports:
    - name: http
      port: 80
      targetPort: 3000
  selector:
    app: myapp
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    kapp.k14s.io/disable-default-ownership-label-rules: ''
    kapp.k14s.io/disable-default-label-scoping-rules: ''
    app.gitlab.com/app: socialgouv-myapp
    app.gitlab.com/env: master-dev2
    app.gitlab.com/env.name: master-dev2
  labels:
    app: myapp
    application: master-dev2-myapp
    owner: myapp
    team: myapp
    cert: wildcard
  name: myapp
  namespace: myapp-85-master-dev2
spec:
  rules:
    - host: master-dev2-myapp.dev2.fabrique.social.gouv.fr
      http:
        paths:
          - backend:
              serviceName: myapp
              servicePort: 80
            path: /
  tls:
    - hosts:
        - master-dev2-myapp.dev2.fabrique.social.gouv.fr
      secretName: wildcard-crt
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kapp.k14s.io/disable-default-ownership-label-rules: ''
    kapp.k14s.io/disable-default-label-scoping-rules: ''
    app.gitlab.com/app: socialgouv-myapp
    app.gitlab.com/env: master-dev2
    app.gitlab.com/env.name: master-dev2
  labels:
    app: hasura
    application: master-dev2-myapp
    owner: myapp
    team: myapp
    cert: wildcard
  name: hasura
  namespace: myapp-85-master-dev2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hasura
  template:
    metadata:
      annotations:
        kapp.k14s.io/disable-default-ownership-label-rules: ''
        kapp.k14s.io/disable-default-label-scoping-rules: ''
        app.gitlab.com/app: socialgouv-myapp
        app.gitlab.com/env: master-dev2
        app.gitlab.com/env.name: master-dev2
      labels:
        app: hasura
        application: master-dev2-myapp
        owner: myapp
        team: myapp
        cert: wildcard
    spec:
      containers:
        - image: >-
            harbor.fabrique.social.gouv.fr/myapp-hasura/myapp-hasura:0123456789abcdefghijklmnopqrstuvwxyz0123
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 5
          name: hasura
          ports:
            - containerPort: 80
              name: http
          readinessProbe:
            failureThreshold: 15
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 0
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 64Mi
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /healthz
              port: http
            periodSeconds: 5
          envFrom:
            - secretRef:
                name: azure-pg-user-0123456
      initContainers:
        - env:
            - name: WAIT_FOR_RETRIES
              value: '24'
          envFrom:
            - secretRef:
                name: azure-pg-user-0123456
          image: ghcr.io/socialgouv/docker/wait-for-postgres:6.0.1
          imagePullPolicy: Always
          name: wait-for-postgres
          resources:
            limits:
              cpu: 20m
              memory: 32Mi
            requests:
              cpu: 5m
              memory: 16Mi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: hasura
    application: master-dev2-myapp
    owner: myapp
    team: myapp
    cert: wildcard
  name: hasura
  annotations:
    kapp.k14s.io/disable-default-ownership-label-rules: ''
    kapp.k14s.io/disable-default-label-scoping-rules: ''
    app.gitlab.com/app: socialgouv-myapp
    app.gitlab.com/env: master-dev2
    app.gitlab.com/env.name: master-dev2
  namespace: myapp-85-master-dev2
spec:
  ports:
    - name: http
      port: 80
      targetPort: 80
  selector:
    app: hasura
  type: ClusterIP
"
`;
